import{_ as s,d as a}from"./app.7ccd3bcb.js";const e={},n=a(`<h1 id="escaping-special-characters" tabindex="-1"><a class="header-anchor" href="#escaping-special-characters" aria-hidden="true">#</a> Escaping Special Characters</h1><p>A literal name can contain a special character using escape sequences &#39;\\&#39;. Below is an example of both key and value literals;</p><p><code>CONCEPTS: escape.concepts.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;\\\\$service\\\\+&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\\\$response&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Below is the only valid schema for this concepts definition, because it only contains literals;</p><p><code>SCHEMA: concepts.escape.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;$service+&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$response&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,7);function c(p,t){return n}var r=s(e,[["render",c],["__file","07-escaping-special-characters.html.vue"]]);export{r as default};

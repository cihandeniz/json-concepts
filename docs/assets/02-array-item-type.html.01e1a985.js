import{_ as n,d as s}from"./app.7ccd3bcb.js";const a={},t=s(`<h1 id="array-item-type" tabindex="-1"><a class="header-anchor" href="#array-item-type" aria-hidden="true">#</a> Array Item Type</h1><p>Type syntax (<code>:</code>) also applies to array variables. When an array variable has a type, it means all items of that array is required to be of that type. Below is an example;</p><p><code>CONCEPTS: tags.concepts.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;tags?&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;$tags:string&quot;</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Below schema is <strong>invalid</strong> because all items in <code>$tags</code> are expected to be a <code>string</code>;</p><p><code>SCHEMA: invalid.tags.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;tags&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;not&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;allowed&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>ERROR: &#39;invalid.tags.json&#39; is not valid, &#39;0&#39; is not a valid string.</code></p><h2 id="custom-types" tabindex="-1"><a class="header-anchor" href="#custom-types" aria-hidden="true">#</a> Custom Types</h2><p>Custom types are also supported.</p><p><code>CONCEPTS: season.concepts.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;$season*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;$months:month&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
    
    <span class="token property">&quot;@types&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;month&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;JAN&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FEB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MAR&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;APR&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MAY&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JUN&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;JUL&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;AUG&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;SEP&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;OCT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;NOV&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DEC&quot;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>SCHEMA: invalid.season.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;summer&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;JUN&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JUL&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;AUH&quot;</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>ERROR: &#39;invalid.season.json&#39; is not valid, &#39;AUH&#39; is not a valid month.</code></p>`,15);function p(e,o){return t}var u=n(a,[["render",p],["__file","02-array-item-type.html.vue"]]);export{u as default};

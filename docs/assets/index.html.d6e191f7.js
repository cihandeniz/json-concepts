import{r as p,o as c,c as u,a as s,b as a,w as o,F as r,d as l,e as n}from"./app.484750ef.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const k={},b=l(`<p><strong>json concepts</strong> is a meta-schema specification in JSON format which allows you to create a conceptual design for any type of data structure, especially those that represent a schema.</p><p>It is designed for definitions to have the same hierarchy with the schema files they validate. So by looking at a definition, you will roughly understand what schema it expects.</p><p>Here is a quick example.</p><p><code>CONCEPTS: endpoint.concepts.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;$endpoint:path+&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;$method:method+&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;$parameter*&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$type&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;response?&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$responseType&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;$status:status&quot;</span> <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;models?&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;$model+&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;$field*&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$type&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;@types&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^\\\\/.*$&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PUT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DELETE&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">201</span><span class="token punctuation">,</span> <span class="token number">202</span><span class="token punctuation">,</span> <span class="token number">204</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">401</span><span class="token punctuation">,</span> <span class="token number">403</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">,</span> <span class="token number">500</span> <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>This definition introduces <code>$endpoint</code>, <code>$method</code>, <code>$parameter</code>, <code>$model</code> and <code>$field</code> concepts. <code>$endpoint</code> is of type <code>:path</code>, <code>$method</code> is <code>:method</code>, and so on. <code>@types</code> meta-data lists all custom types. Long story short, this definition validates a schema like this one;</p><p><code>SCHEMA: users.endpoint.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;@concepts&quot;</span><span class="token operator">:</span> <span class="token string">&quot;endpoint.concepts.json&quot;</span><span class="token punctuation">,</span>
    
    <span class="token property">&quot;/users&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;GET&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;response&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">404</span> <span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;POST&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;surname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">400</span> <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;models&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;surname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,8),d=n("To understand how you can make use of "),m=s("strong",null,"json concepts",-1),q=n(", have a look at its "),h=n("use cases"),y=n("."),_=n("Or you can directly dive into the "),g=n("specs"),f=n("."),$=s("h2",{id:"contribution",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#contribution","aria-hidden":"true"},"#"),n(" Contribution")],-1),v=n("Thanks for your interest in "),j=s("strong",null,"json concepts",-1),x=n(". If you want to ask a question or make a contribution, just go to the "),T={href:"https://github.com/codingatwill/json-concepts",target:"_blank",rel:"noopener noreferrer"},w=n("github repository"),E=n(". If you view this page from github, then go ahead and open an issue to ask a question or create a pull request to make a contribution."),S=s("p",null,"See you around \u{1F44B}",-1);function C(L,N){const t=p("RouterLink"),e=p("ExternalLinkIcon");return c(),u(r,null,[b,s("p",null,[d,m,q,a(t,{to:"/use-cases/"},{default:o(()=>[h]),_:1}),y]),s("p",null,[_,a(t,{to:"/specs/"},{default:o(()=>[g]),_:1}),f]),$,s("p",null,[v,j,x,s("a",T,[w,a(e)]),E]),S],64)}var P=i(k,[["render",C]]);export{P as default};

(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{364:function(s,t,e){"use strict";e.r(t);var a=e(44),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"literals"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#literals"}},[s._v("#")]),s._v(" Literals")]),s._v(" "),e("p",[s._v("Literals are definitions that are expected in schema files exactly the same as\nthey exist in concepts files.")]),s._v(" "),e("p",[s._v("In below file "),e("code",[s._v("sayHello")]),s._v(", "),e("code",[s._v("name")]),s._v(" and "),e("code",[s._v("string")]),s._v(" are literals.")]),s._v(" "),e("p",[e("code",[s._v("CONCEPTS: service.concepts.json")])]),s._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"sayHello"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string"')]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("p",[s._v("Literals on the left-hand side are called "),e("strong",[s._v("key literals")]),s._v(". Those that are on\nthe right-hand side are called "),e("strong",[s._v("value literals")]),s._v(".")]),s._v(" "),e("p",[s._v("Above concepts file only accepts below schema;")]),s._v(" "),e("p",[e("code",[s._v("SCHEMA: greeting.service.json")])]),s._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"sayHello"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string"')]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("p",[s._v("This is because there are no variables in above concepts file, but only\nliterals.")])])}),[],!1,null,null,null);t.default=n.exports}}]);
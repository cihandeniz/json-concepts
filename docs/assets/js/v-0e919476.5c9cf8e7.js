(self.webpackChunkjson_concepts=self.webpackChunkjson_concepts||[]).push([[4658],{4524:(e,s,t)=>{"use strict";t.r(s),t.d(s,{data:()=>o});const o={key:"v-0e919476",path:"/proposals/XX-split-spec-and-impl-tests.html",title:"Split Spec and Impl Tests",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"proposals/XX-split-spec-and-impl-tests.md"}},7264:(e,s,t)=>{"use strict";t.r(s),t.d(s,{default:()=>c});const o=(0,t(6252).uE)('<h1 id="split-spec-and-impl-tests" tabindex="-1"><a class="header-anchor" href="#split-spec-and-impl-tests" aria-hidden="true">#</a> Split Spec and Impl Tests</h1><blockquote><p>TBD -&gt; for node impl, spec tests should include only test cases from specs distribution. rest should be in unit tests.</p><ul><li>Specs does not reflect all test cases, some of them are implied. Add those cases from not tests to spec mds, and refer to them using <code>from</code> function.</li><li>Refactor test cases so that they are sentences from spec files. e.g. instead of <code>It should merge multiple references</code> for a mocha test, use <code>References can be merged using &#39;&amp;&#39;</code> directly from md file.</li><li>Then move rest of the tests to a separate folder like <code>unit</code> or <code>impl</code>.</li></ul></blockquote>',2),c={render:function(e,s){return o}}}}]);